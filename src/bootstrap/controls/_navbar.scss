@use 'sass:map';
@use '../rfs';
@use '../mixins';
@use '../variables';
$prefix: 'bs-' !default;

$nav-link-padding-y:                .5rem !default;
$nav-link-padding-x:                1rem !default;
$nav-link-font-size:                null !default;
$nav-link-font-weight:              null !default;
$nav-link-color:                    var(--#{$prefix}link-color) !default;
$nav-link-hover-color:              var(--#{$prefix}link-hover-color) !default;
$nav-link-transition:               color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out !default;
$nav-link-disabled-color:           var(--#{$prefix}secondary-color) !default;
$nav-link-focus-box-shadow:         0 0 0 .25rem rgba(var(--#{$prefix}primary-rgb), .25) !default;


$navbar-padding-y:                  variables.$spacer * .5 !default;
$navbar-padding-x:                  null !default;
$navbar-nav-link-padding-x:         .5rem !default;

$navbar-brand-font-size:            variables.$font-size-lg !default;
// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link
$nav-link-height:                   variables.$font-size-base * variables.$line-height-base + $nav-link-padding-y * 2 !default;
$navbar-brand-height:               $navbar-brand-font-size * variables.$line-height-base !default;
$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) * .5 !default;
$navbar-brand-margin-end:           1rem !default;

$navbar-toggler-padding-y:          .25rem !default;
$navbar-toggler-padding-x:          .75rem !default;
$navbar-toggler-font-size:          variables.$font-size-lg !default;
$navbar-toggler-border-radius:      variables.$border-radius !default;
$navbar-toggler-focus-width:        .25rem !default;
$navbar-toggler-transition:         box-shadow .15s ease-in-out !default;

$navbar-light-color:                rgba(var(--#{$prefix}body-text-rgb), .65) !default;
$navbar-light-hover-color:          rgba(var(--#{$prefix}body-text-rgb), .8) !default;
$navbar-light-active-color:         rgba(var(--#{$prefix}body-text-rgb), 1) !default;
$navbar-light-disabled-color:       rgba(var(--#{$prefix}body-text-rgb), .3) !default;
$navbar-light-icon-color:           rgba(var(--#{$prefix}body-text-rgb), .75) !default;

$navbar-light-brand-color:          $navbar-light-active-color !default;
$navbar-light-brand-hover-color:    $navbar-light-active-color !default;
$navbar-light-toggler-border-color: rgba(var(--#{$prefix}emphasis-color-rgb), .15) !default;


.navbar {
    // scss-docs-start navbar-css-vars
    --#{$prefix}navbar-padding-x: #{if($navbar-padding-x == null, 0, $navbar-padding-x)};
    --#{$prefix}navbar-padding-y: #{$navbar-padding-y};
    --#{$prefix}navbar-color: #{$navbar-light-color};
    --#{$prefix}navbar-hover-color: #{$navbar-light-hover-color};
    --#{$prefix}navbar-disabled-color: #{$navbar-light-disabled-color};
    --#{$prefix}navbar-active-color: #{$navbar-light-active-color};
    --#{$prefix}navbar-brand-padding-y: #{$navbar-brand-padding-y};
    --#{$prefix}navbar-brand-margin-end: #{$navbar-brand-margin-end};
    --#{$prefix}navbar-brand-font-size: #{$navbar-brand-font-size};
    --#{$prefix}navbar-brand-color: #{$navbar-light-brand-color};
    --#{$prefix}navbar-brand-hover-color: #{$navbar-light-brand-hover-color};
    --#{$prefix}navbar-nav-link-padding-x: #{$navbar-nav-link-padding-x};
    --#{$prefix}navbar-toggler-padding-y: #{$navbar-toggler-padding-y};
    --#{$prefix}navbar-toggler-padding-x: #{$navbar-toggler-padding-x};
    --#{$prefix}navbar-toggler-font-size: #{$navbar-toggler-font-size};
    // --#{$prefix}navbar-toggler-icon-bg: #{escape-svg($navbar-light-toggler-icon-bg)};
    --#{$prefix}navbar-toggler-border-color: #{$navbar-light-toggler-border-color};
    --#{$prefix}navbar-toggler-border-radius: #{$navbar-toggler-border-radius};
    --#{$prefix}navbar-toggler-focus-width: #{$navbar-toggler-focus-width};
    --#{$prefix}navbar-toggler-transition: #{$navbar-toggler-transition};
    // scss-docs-end navbar-css-vars

    position: relative;
    display: flex;
    flex-wrap: wrap; // allow us to do the line break for collapsing content
    align-items: center;
    justify-content: space-between; // space out brand from logo
    padding: var(--#{$prefix}navbar-padding-y) var(--#{$prefix}navbar-padding-x);
    @include mixins.gradient-bg();

    // Because flex properties aren't inherited, we need to redeclare these first
    // few properties so that content nested within behave properly.
    // The `flex-wrap` property is inherited to simplify the expanded navbars
    %container-flex-properties {
        display: flex;
        flex-wrap: inherit;
        align-items: center;
        justify-content: space-between;
    }

    > .container,
    > .container-fluid {
        @extend %container-flex-properties;
    }

    @each $breakpoint, $container-max-width in variables.$container-max-widths {
        > .container#{mixins.breakpoint-infix($breakpoint, variables.$container-max-widths)} {
            @extend %container-flex-properties;
        }
    }
}


// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
    padding-top: var(--#{$prefix}navbar-brand-padding-y);
    padding-bottom: var(--#{$prefix}navbar-brand-padding-y);
    margin-right: var(--#{$prefix}navbar-brand-margin-end);
    @include rfs.font-size(var(--#{$prefix}navbar-brand-font-size));
    color: var(--#{$prefix}navbar-brand-color);
    text-decoration: none;
    white-space: nowrap;

    &:hover,
    &:focus {
        color: var(--#{$prefix}navbar-brand-hover-color);
        text-decoration: none;
    }
}


// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
    // scss-docs-start navbar-nav-css-vars
    --#{$prefix}nav-link-padding-x: 0;
    --#{$prefix}nav-link-padding-y: #{$nav-link-padding-y};
    @include rfs.rfs($nav-link-font-size, --#{$prefix}nav-link-font-size);
    --#{$prefix}nav-link-font-weight: #{$nav-link-font-weight};
    --#{$prefix}nav-link-color: var(--#{$prefix}navbar-color);
    --#{$prefix}nav-link-hover-color: var(--#{$prefix}navbar-hover-color);
    --#{$prefix}nav-link-disabled-color: var(--#{$prefix}navbar-disabled-color);
    // scss-docs-end navbar-nav-css-vars

    display: flex;
    flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
    padding-left: 0;
    margin-bottom: 0;
    list-style: none;

    .nav-link {
        &.active,
        &.show {
            color: var(--#{$prefix}navbar-active-color);
        }
    }

    .dropdown-menu {
        position: static;
    }
}


// Navbar text
//
//

.navbar-text {
    padding-top: $nav-link-padding-y;
    padding-bottom: $nav-link-padding-y;
    color: var(--#{$prefix}navbar-color);

    a,
    a:hover,
    a:focus  {
        color: var(--#{$prefix}navbar-active-color);
    }
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
    flex-grow: 1;
    flex-basis: 100%;
    // For always expanded or extra full navbars, ensure content aligns itself
    // properly vertically. Can be easily overridden with flex utilities.
    align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
    padding: var(--#{$prefix}navbar-toggler-padding-y) var(--#{$prefix}navbar-toggler-padding-x);
    @include rfs.font-size(var(--#{$prefix}navbar-toggler-font-size));
    line-height: 1;
    color: var(--#{$prefix}navbar-color);
    background-color: transparent; // remove default button style
    border: var(--#{$prefix}border-width) solid var(--#{$prefix}navbar-toggler-border-color); // remove default button style
    @include mixins.border-radius(var(--#{$prefix}navbar-toggler-border-radius));
    @include mixins.transition(var(--#{$prefix}navbar-toggler-transition));

    &:hover {
        text-decoration: none;
    }

    &:focus {
        text-decoration: none;
        outline: 0;
        box-shadow: 0 0 0 var(--#{$prefix}navbar-toggler-focus-width);
    }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
    display: inline-block;
    width: 1.5em;
    height: 1.5em;
    vertical-align: middle;
    background-image: var(--#{$prefix}navbar-toggler-icon-bg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100%;
}

.navbar-nav-scroll {
    max-height: var(--#{$prefix}scroll-height, 75vh);
    overflow-y: auto;
}

// scss-docs-start navbar-expand-loop
// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
    @each $breakpoint in map.keys(variables.$grid-breakpoints) {
        $next: mixins.breakpoint-next($breakpoint, variables.$grid-breakpoints);
        $infix: mixins.breakpoint-infix($next, variables.$grid-breakpoints);

        // stylelint-disable-next-line scss/selector-no-union-class-name
        &#{$infix} {
            @include mixins.media-breakpoint-up($next) {
                flex-wrap: nowrap;
                justify-content: flex-start;

                .navbar-nav {
                    flex-direction: row;

                    .dropdown-menu {
                        position: absolute;
                    }

                    .nav-link {
                        padding-right: var(--#{$prefix}navbar-nav-link-padding-x);
                        padding-left: var(--#{$prefix}navbar-nav-link-padding-x);
                    }
                }

                .navbar-nav-scroll {
                    overflow: visible;
                }

                .navbar-collapse {
                    display: flex !important; // stylelint-disable-line declaration-no-important
                    flex-basis: auto;
                }

                .navbar-toggler {
                    display: none;
                }

                .offcanvas {
                    // stylelint-disable declaration-no-important
                    position: static;
                    z-index: auto;
                    flex-grow: 1;
                    width: auto !important;
                    height: auto !important;
                    visibility: visible !important;
                    background-color: transparent !important;
                    border: 0 !important;
                    transform: none !important;
                    @include mixins.box-shadow(none);
                    @include mixins.transition(none);
                    // stylelint-enable declaration-no-important

                    .offcanvas-header {
                        display: none;
                    }

                    .offcanvas-body {
                        display: flex;
                        flex-grow: 0;
                        padding: 0;
                        overflow-y: visible;
                    }
                }
            }
        }
    }
}

.nav {
    // scss-docs-start nav-css-vars
    --#{$prefix}nav-link-padding-x: #{$nav-link-padding-x};
    --#{$prefix}nav-link-padding-y: #{$nav-link-padding-y};
    @include rfs.rfs($nav-link-font-size, --#{$prefix}nav-link-font-size);
    --#{$prefix}nav-link-font-weight: #{$nav-link-font-weight};
    --#{$prefix}nav-link-color: #{$nav-link-color};
    --#{$prefix}nav-link-hover-color: #{$nav-link-hover-color};
    --#{$prefix}nav-link-disabled-color: #{$nav-link-disabled-color};
    // scss-docs-end nav-css-vars

    display: flex;
    flex-wrap: wrap;
    padding-left: 0;
    margin-bottom: 0;
    list-style: none;
}

.nav-link {
    display: block;
    padding: var(--#{$prefix}nav-link-padding-y) var(--#{$prefix}nav-link-padding-x);
    @include rfs.font-size(var(--#{$prefix}nav-link-font-size));
    font-weight: var(--#{$prefix}nav-link-font-weight);
    color: var(--#{$prefix}nav-link-color);
    text-decoration: none;
    background: none;
    border: 0;
    @include mixins.transition($nav-link-transition);

    &:hover,
    &:focus {
        color: var(--#{$prefix}nav-link-hover-color);
        text-decoration: none;
    }

    &:focus-visible {
        outline: 0;
        box-shadow: $nav-link-focus-box-shadow;
    }

    // Disabled state lightens text
    &.disabled,
    &:disabled {
        color: var(--#{$prefix}nav-link-disabled-color);
        pointer-events: none;
        cursor: default;
    }
}
